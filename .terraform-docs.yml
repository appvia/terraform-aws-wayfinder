content: |-
  # Terraform Module: Wayfinder on AWS

  The "tf-wayfinder-aws" Terraform Module can be used to provision and manage a licensed edition of [Appvia Wayfinder](https://www.appvia.io/product/) on AWS.

  ## Requirements

  To run this module, you will need the following:
  1. Product license key: Contact sales@appvia.io for more information.
  2. IDP App configuration details: Wayfinder integrates with an IDP for managing user access. You will need a valid Server URL, Client ID and Client Secret for initial configuration.
  3. A public Route53 DNS Zone: This module will create DNS records for the Wayfinder API and UI endpoints, and performs a DNS01 challenge via the LetsEncrypt Issuer for valid domain certificates.
  4. Existing VPC and Subnets: This module will deploy an EKS Cluster and so requires an existing VPC with outbound internet connectivity. Public ingress is not required, both EKS and Wayfinder ingress can be configured with an internal endpoint.
  5. Network Resource Tags: Tags are required to select the correct networking resources:
      1. Public Subnets should have the tag `"kubernetes.io/role/elb" = 1`
      2. Private Subnets should have the tag `"kubernetes.io/role/internal-elb" = 1`

  ### Wayfinder License and IDP Secret

  An AWS Secrets Manager secret should be present in the AWS account with the following structure:
  ```json
  {
    "licenseKey": "wayfinder-product-license-key",
    "idpClientId": "idp-client-id",
    "idpClientSecret": "idp-client-secret",
    "idpServerUrl": "https://example.okta.com"
  }
  ```

  The Authorized Redirect URI for the IDP Application should be set to: `https://${wayfinder_domain_name_api}/oauth/callback`

  **Note:** If you are using Azure Active Directory, you must:
  1. Set `idpAzureTenantId` in the above AWS Secret to your Azure Tenant ID (`idpServerUrl` is not required)
  2. Set the Terraform variable `var.idp_provider` to `aad`

  ## Deployment

  Please see the [examples](./examples) directory for an example on how to deploy this module.

  ## Updating Docs

  The `terraform-docs` utility is used to generate this README. Follow the below steps to update:
  1. Make changes to the `.terraform-docs.yml` file
  2. Fetch the `terraform-docs` binary (https://terraform-docs.io/user-guide/installation/)
  3. Run `terraform-docs markdown table --output-file ${PWD}/README.md --output-mode inject .`

  {{ .Inputs }}

  {{ .Outputs }}
